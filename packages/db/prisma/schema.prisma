// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())

  
  rooms     Room[]        @relation("CreatedRooms")  
  memberships RoomMember[] 
  chats     Chat[]
}


model Room {
  id          String   @id @default(uuid())
  name        String
  createdById String
  createdAt   DateTime @default(now())

  
  createdBy   User   @relation("CreatedRooms", fields: [createdById], references: [id])
  members     RoomMember[]
  chats       Chat[]
}


model RoomMember {
  id        String   @id @default(uuid())
  roomId    String
  userId    String
  role      String   @default("member") 
  joinedAt  DateTime @default(now())

  room      Room @relation(fields: [roomId], references: [id])
  user      User @relation(fields: [userId], references: [id])
   @@unique([roomId, userId])
}

model Chat {
  id        Int      @id @default(autoincrement())
  message   String
  userId    String
  roomId    String
  createdAt DateTime @default(now())

  user      User @relation(fields: [userId], references: [id])
  room      Room @relation(fields: [roomId], references: [id])
}

